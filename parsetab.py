
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '954EE22A79DC429CE06F75ED53192C33'
    
_lr_action_items = {'MINUS':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,],[1,1,9,1,-10,-9,-7,-10,1,1,1,1,9,1,-4,-3,-5,-6,-8,9,]),'PLUS':([2,5,6,7,8,13,15,16,17,18,19,20,],[10,-10,-9,-7,-10,10,-4,-3,-5,-6,-8,10,]),'NAME':([0,1,3,9,10,11,12,14,],[5,8,8,8,8,8,8,8,]),'LPAREN':([0,1,3,9,10,11,12,14,],[3,3,3,3,3,3,3,3,]),'EQUALS':([5,],[14,]),'$end':([2,4,5,6,7,8,15,16,17,18,19,20,],[-2,0,-10,-9,-7,-10,-4,-3,-5,-6,-8,-1,]),'TIMES':([2,5,6,7,8,13,15,16,17,18,19,20,],[11,-10,-9,-7,-10,11,11,11,-5,-6,-8,11,]),'DIVIDE':([2,5,6,7,8,13,15,16,17,18,19,20,],[12,-10,-9,-7,-10,12,12,12,-5,-6,-8,12,]),'NUMBER':([0,1,3,9,10,11,12,14,],[6,6,6,6,6,6,6,6,]),'RPAREN':([6,7,8,13,15,16,17,18,19,],[-9,-7,-10,19,-4,-3,-5,-6,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,1,3,9,10,11,12,14,],[2,7,13,15,16,17,18,20,]),'statement':([0,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calc.py',61),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',65),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',69),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',70),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',71),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',72),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',79),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',83),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',87),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',91),
]
